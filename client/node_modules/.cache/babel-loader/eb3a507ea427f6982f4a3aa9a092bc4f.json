{"ast":null,"code":"/*import Footer from \"../landingPage/Footer\";\nimport patient_profile from \"../../assets/img/dashboard/patient2_pbl.png\";\nimport PatientReportCompo from \"./PatientReportCompo\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nconst PatientReports = (props) => {\n  const navigate = useNavigate();\n  const [dob, setDob] = useState(\"01/01/2006\");\n  const [patient, setPatient] = useState({\n    name: {\n      firstName: \"\",\n      middleName: \"\",\n      surName: \"\",\n    },\n    dob: \"\",\n    mobile: \"\",\n    email: \"\",\n    adharCard: \"\",\n    bloodGroup: \"\",\n    address: {\n      building: \"\",\n      city: \"\",\n      taluka: \"\",\n      district: \"\",\n      state: \"\",\n      pincode: \"\",\n    },\n    password: \"\",\n    diseases: [{ disease: \"\", yrs: \"\" }],\n    contactPerson: {\n      name: {\n        firstName: \"\",\n        surName: \"\",\n      },\n      mobile: \"\",\n      email: \"\",\n      relation: \"\",\n      address: {\n        building: \"\",\n        city: \"\",\n        taluka: \"\",\n        district: \"\",\n        state: \"\",\n        pincode: \"\",\n      },\n    },\n  });\n  const [prescriptions, setPrescriptions] = useState([{}]);\n\n  const convertDatetoString = (dateString) => {\n    let date = new Date(dateString);\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  useEffect(() => {\n    async function getpatient() {\n      const res = await fetch(\"/getpatient\");\n      const data = await res.json();\n      if (data.AuthError) {\n        props.settoastCondition({\n          status: \"info\",\n          message: \"Please Login to proceed!!!\",\n        });\n        props.setToastShow(true);\n        navigate(\"/\");\n      } else {\n        setPatient(data.patient);\n        if (data.patient.prescriptions) {\n          setPrescriptions(data.patient.prescriptions.reverse());\n        }\n        setDob(convertDatetoString(patient.dob));\n      }\n    }\n    getpatient();\n  }, [dob]);\n  return (\n    <div className=\"col-span-10\">\n      <div className=\" px-12\">\n        <div className=\"h-screen\">\n          <div className=\"font-poppins   mainf\">\n            <Link to=\"/patient/profile\">\n              <div className=\"flex bg-white rounded shadow  px-4   ml-auto h-14 w-1/5 mr-8 mt-8\">\n                <img\n                  src={patient_profile}\n                  className=\"w-12 p-1 rounded-2xl\"\n                  alt=\"profile\"\n                ></img>\n                <div className=\"grid grid-rows-2 ml-4 gap-2  mb-4\">\n                  <div className=\"mt-4 ml-4  font-bold font-poppins\">\n                    <h1 className=\"ml-2\">\n                      {`${patient.name.firstName} ${patient.name.surName}`}\n                    </h1>\n                  </div>\n                </div>\n              </div>\n            </Link>\n            <div className=\"flex justify-between m-8\">\n              <div className=\"font-bold text-xl ml-4\">\n                <h1>Patient Reports</h1>\n              </div>\n            </div>\n            <div className=\"bg-white m-4 rounded-lg \">\n              <div className=\"grid grid-rows-2 p-6 gap-2 shadow\">\n                <div className=\"grid grid-cols-4 font-bold \">\n                  <div>\n                    <h1>Date</h1>\n                  </div>\n                  <div>\n                    <h1>Doctor Name</h1>\n                  </div>\n                  <div>\n                    <h1>Diagnosis</h1>\n                  </div>\n                  <div>\n                    <h1>Prescription</h1>\n                  </div>\n                  <hr></hr>\n                  <hr></hr>\n                  <hr></hr>\n                  <hr></hr>\n                </div>\n                {prescriptions.length > 0 ? (\n                  prescriptions.map((prescription) => {\n                    return (\n                      <PatientReportCompo\n                        prescription={prescription}\n                        setPrescriptionID={props.setPrescriptionID}\n                      />\n                    );\n                  })\n                ) : (\n                  <div className=\"font-bold mt-3 mx-auto\">\n                    No Record Found...\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"-mt-20 mb-0\">\n        <Footer></Footer>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientReports;\n*/","map":{"version":3,"names":[],"sources":["/Users/abhinavchallagundla/Downloads/public_health_record_management_system-master/client/src/components/patientDashboard/PatientReports.js"],"sourcesContent":["/*import Footer from \"../landingPage/Footer\";\nimport patient_profile from \"../../assets/img/dashboard/patient2_pbl.png\";\nimport PatientReportCompo from \"./PatientReportCompo\";\nimport { useEffect, useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nconst PatientReports = (props) => {\n  const navigate = useNavigate();\n  const [dob, setDob] = useState(\"01/01/2006\");\n  const [patient, setPatient] = useState({\n    name: {\n      firstName: \"\",\n      middleName: \"\",\n      surName: \"\",\n    },\n    dob: \"\",\n    mobile: \"\",\n    email: \"\",\n    adharCard: \"\",\n    bloodGroup: \"\",\n    address: {\n      building: \"\",\n      city: \"\",\n      taluka: \"\",\n      district: \"\",\n      state: \"\",\n      pincode: \"\",\n    },\n    password: \"\",\n    diseases: [{ disease: \"\", yrs: \"\" }],\n    contactPerson: {\n      name: {\n        firstName: \"\",\n        surName: \"\",\n      },\n      mobile: \"\",\n      email: \"\",\n      relation: \"\",\n      address: {\n        building: \"\",\n        city: \"\",\n        taluka: \"\",\n        district: \"\",\n        state: \"\",\n        pincode: \"\",\n      },\n    },\n  });\n  const [prescriptions, setPrescriptions] = useState([{}]);\n\n  const convertDatetoString = (dateString) => {\n    let date = new Date(dateString);\n    let day = date.getDate();\n    let month = date.getMonth() + 1;\n    let year = date.getFullYear();\n    return `${day}/${month}/${year}`;\n  };\n\n  useEffect(() => {\n    async function getpatient() {\n      const res = await fetch(\"/getpatient\");\n      const data = await res.json();\n      if (data.AuthError) {\n        props.settoastCondition({\n          status: \"info\",\n          message: \"Please Login to proceed!!!\",\n        });\n        props.setToastShow(true);\n        navigate(\"/\");\n      } else {\n        setPatient(data.patient);\n        if (data.patient.prescriptions) {\n          setPrescriptions(data.patient.prescriptions.reverse());\n        }\n        setDob(convertDatetoString(patient.dob));\n      }\n    }\n    getpatient();\n  }, [dob]);\n  return (\n    <div className=\"col-span-10\">\n      <div className=\" px-12\">\n        <div className=\"h-screen\">\n          <div className=\"font-poppins   mainf\">\n            <Link to=\"/patient/profile\">\n              <div className=\"flex bg-white rounded shadow  px-4   ml-auto h-14 w-1/5 mr-8 mt-8\">\n                <img\n                  src={patient_profile}\n                  className=\"w-12 p-1 rounded-2xl\"\n                  alt=\"profile\"\n                ></img>\n                <div className=\"grid grid-rows-2 ml-4 gap-2  mb-4\">\n                  <div className=\"mt-4 ml-4  font-bold font-poppins\">\n                    <h1 className=\"ml-2\">\n                      {`${patient.name.firstName} ${patient.name.surName}`}\n                    </h1>\n                  </div>\n                </div>\n              </div>\n            </Link>\n            <div className=\"flex justify-between m-8\">\n              <div className=\"font-bold text-xl ml-4\">\n                <h1>Patient Reports</h1>\n              </div>\n            </div>\n            <div className=\"bg-white m-4 rounded-lg \">\n              <div className=\"grid grid-rows-2 p-6 gap-2 shadow\">\n                <div className=\"grid grid-cols-4 font-bold \">\n                  <div>\n                    <h1>Date</h1>\n                  </div>\n                  <div>\n                    <h1>Doctor Name</h1>\n                  </div>\n                  <div>\n                    <h1>Diagnosis</h1>\n                  </div>\n                  <div>\n                    <h1>Prescription</h1>\n                  </div>\n                  <hr></hr>\n                  <hr></hr>\n                  <hr></hr>\n                  <hr></hr>\n                </div>\n                {prescriptions.length > 0 ? (\n                  prescriptions.map((prescription) => {\n                    return (\n                      <PatientReportCompo\n                        prescription={prescription}\n                        setPrescriptionID={props.setPrescriptionID}\n                      />\n                    );\n                  })\n                ) : (\n                  <div className=\"font-bold mt-3 mx-auto\">\n                    No Record Found...\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"-mt-20 mb-0\">\n        <Footer></Footer>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientReports;\n*/"],"mappings},"metadata":{},"sourceType":"module"}