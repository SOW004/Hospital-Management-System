{"ast":null,"code":"/*import Footer from \"../landingPage/Footer\";\nimport plus_logo from \"../../assets/img/dashboard/add2_pbl.png\";\nimport minus_logo from \"../../assets/img/dashboard/minus2_pbl.png\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\n\nconst AddNewDiagnosis = (props) => {\n  const navigate = useNavigate();\n  const [Loading, setLoading] = useState(false);\n  const [doctor, setDoctor] = useState({});\n  const [MedicineList, setMedicineList] = useState([\n    {\n      medicineName: \"\",\n      type: \"\",\n      dosage: {\n        morning: { quantity: \"\", remark: \"\" },\n        afternoon: { quantity: \"\", remark: \"\" },\n        evening: { quantity: \"\", remark: \"\" },\n      },\n      duration: \"\",\n      total: \"\",\n    },\n  ]);\n\n  const [chiefComplaints, setChiefComplaints] = useState([\n    { complaint: \"\", duration: \"\", finding: \"\" },\n  ]);\n  // const [clinicalFindings, setClinicalFindings] = useState([{ finding: \"\" }]);\n  const [investigations, setInvestigations] = useState([{ investigation: \"\" }]);\n  const [advices, setAdvices] = useState([{ advice: \"\" }]);\n\n  const handleAddMedicine = () => {\n    const tempmedicinelist = [...MedicineList];\n    tempmedicinelist.push({\n      medicineName: \"\",\n      type: \"\",\n      dosage: {\n        morning: { quantity: \"\", remark: \"\" },\n        afternoon: { quantity: \"\", remark: \"\" },\n        evening: { quantity: \"\", remark: \"\" },\n      },\n      duration: \"\",\n      total: \"\",\n    });\n    setMedicineList(tempmedicinelist);\n  };\n  const handleAddChiefComplaint = () => {\n    const tempChiefComplaint = [...chiefComplaints];\n    tempChiefComplaint.push({ complaint: \"\", duration: \"\", finding: \"\" });\n    setChiefComplaints(tempChiefComplaint);\n  };\n\n  // const handleAddClinicalFindings = () => {\n  //   const tempClinicalFinding = [...clinicalFindings];\n  //   tempClinicalFinding.push({ finding: \"\" });\n  //   setClinicalFindings(tempClinicalFinding);\n  // };\n\n  const handleAddInvestigation = () => {\n    const tempInvestigations = [...investigations];\n    tempInvestigations.push({ investigation: \"\" });\n    setInvestigations(tempInvestigations);\n  };\n\n  const handleAddAdvices = () => {\n    const tempAdvices = [...advices];\n    tempAdvices.push({ advice: \"\" });\n    setAdvices(tempAdvices);\n  };\n\n  const [prescription, setPrescription] = useState({\n    doctor: \"\",\n    doctormobile: \"\",\n    hospital: {\n      name: \"\",\n      address: \"\",\n      mobile: \"\",\n    },\n    chiefComplaints: chiefComplaints,\n    notes: { note: \"\" },\n    diagnosis: { diagno: \"\" },\n    procedureConducted: { procedure: \"\" },\n    medicines: MedicineList,\n    investigations: investigations,\n    advices: advices,\n  });\n\n  useEffect(() => {\n    async function getDoctor() {\n      const res = await fetch(\"/getdoctor\");\n      const data = await res.json();\n      if (data.AuthError) {\n        props.settoastCondition({\n          status: \"info\",\n          message: \"Please Login to proceed!!!\",\n        });\n        props.setToastShow(true);\n      }\n      setDoctor(data.doctor);\n      const tempprescription = { ...prescription };\n      tempprescription.doctor = `${doctor.name.firstName} ${doctor.name.middleName} ${doctor.name.surName}`;\n      tempprescription.hospital.name = doctor.org;\n      tempprescription.hospital.address = `${doctor.orgAddress.building}, ${doctor.orgAddress.city}, ${doctor.orgAddress.taluka}, ${doctor.orgAddress.district}, ${doctor.orgAddress.state}- ${doctor.orgAddress.pincode}`;\n      tempprescription.doctormobile = doctor.mobile;\n      tempprescription.hospital.mobile = doctor.orgNumber;\n      setPrescription(tempprescription);\n    }\n    getDoctor();\n  }, [doctor]);\n\n  const handleAddPrescription = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const res = await fetch(`/prescription/${props.healthID}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(prescription),\n    });\n    const data = await res.json();\n    if (data.AuthError) {\n      props.settoastCondition({\n        status: \"info\",\n        message: \"Please Login to proceed!!!\",\n      });\n      props.setToastShow(true);\n      navigate(\"/\");\n    }\n    if (data.msg) {\n      props.settoastCondition({\n        status: \"error\",\n        message: \"Please fill all fields properly!!!\",\n      });\n      props.setToastShow(true);\n    }\n    setLoading(false);\n    props.settoastCondition({\n      status: \"success\",\n      message: \"Prescription Added Successfully!!!\",\n    });\n    props.setToastShow(true);\n    navigate(\"/doctor/dashboard\");\n  };\n\n  return (\n    <div className=\"font-poppins col-span-10 overflow-y-scroll\">\n      <div className=\" lg:min-h-screen lg:grid grid-cols-6  \">\n        <div className=\" col-start-1 col-span-6 ml-8\">\n          <h1 className=\"font-bold lg:text-2xl my-6 ml-6  \">\n            Add a new diagnosis\n          </h1>\n\n          <form\n            className=\"bg-white shadow p-6 m-2 ml-2 mt-8 lg:font-bold  \"\n            onSubmit={handleAddPrescription}\n          >\n            <div className=\"mt-3\">\n              {chiefComplaints.map((chiefComplaint, index) => (\n                <div className=\"grid grid-cols-6 mt-2\">\n                  <h1 className=\"col-span-1\">Chief Complaints </h1>\n\n                  <input\n                    placeholder=\"complaint \"\n                    value={chiefComplaint.complaint}\n                    onChange={(e) => {\n                      let tempChiefComplaint = [...chiefComplaints];\n                      tempChiefComplaint[index].complaint = e.target.value;\n                      setChiefComplaints(tempChiefComplaint);\n                      let tempprescription = { ...prescription };\n                      tempprescription.chiefComplaints = chiefComplaints;\n                      setPrescription(tempprescription);\n                    }}\n                    className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-1\"\n                  ></input>\n                  <input\n                    placeholder=\" duration \"\n                    className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-1\"\n                    value={chiefComplaint.duration}\n                    onChange={(e) => {\n                      let tempChiefComplaint = [...chiefComplaints];\n                      tempChiefComplaint[index].duration = e.target.value;\n                      setChiefComplaints(tempChiefComplaint);\n\n                      let tempprescription = { ...prescription };\n                      tempprescription.chiefComplaints = chiefComplaints;\n                      setPrescription(tempprescription);\n                    }}\n                  ></input>\n                  <input\n                    placeholder=\"Clinical Finding\"\n                    className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-1\"\n                    value={chiefComplaints.finding}\n                    onChange={(e) => {\n                      let tempChiefComplaint = [...chiefComplaints];\n                      tempChiefComplaint[index].finding = e.target.value;\n                      setChiefComplaints(tempChiefComplaint);\n\n                      let tempprescription = { ...prescription };\n                      tempprescription.chiefComplaints = chiefComplaints;\n                      setPrescription(tempprescription);\n                    }}\n                  ></input>\n                  <div className=\"flex ml-3\">\n                    <div\n                      className=\" m-2 h-8 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n                      onClick={handleAddChiefComplaint}\n                    >\n                      <img\n                        src={plus_logo}\n                        className=\"w-8 h-8\"\n                        alt=\"plus-logo\"\n                      ></img>\n                    </div>\n                    {chiefComplaints.length > 1 && (\n                      <div\n                        className=\" m-2 h-8 w-20 mt-0 font-poppins font-semibold cursor-pointer \"\n                        onClick={() => {\n                          let tempChiefComplaint = [...chiefComplaints];\n                          tempChiefComplaint.splice(index, 1);\n\n                          let tempprescription = { ...prescription };\n                          tempprescription.chiefComplaints = tempChiefComplaint;\n                          setPrescription(tempprescription);\n                          setChiefComplaints(tempChiefComplaint);\n                        }}\n                      >\n                        <img\n                          src={minus_logo}\n                          className=\"w-8 h-8\"\n                          alt=\"minus-logo\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"grid grid-cols-6 mt-3  \">\n              <h1 className=\"\">Notes </h1>*/\n\n/*these lines are to be commented only dont uncomment them            {/* <input\n              placeholder=\" Note \"\n              className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n              value={prescription.notes}\n              onChange={(e) => {\n                let tempprescription = { ...prescription };\n                tempprescription.notes = e.target.value;\n                setPrescription(tempprescription);\n              }}\n            // ></input> */\n\n/*<input\n  placeholder=\" Note \"\n  className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n  // value={prescription.notes}\n  value={prescription.notes.note}\n  onChange={(e) => {\n    let tempprescription = { ...prescription };\n    tempprescription.notes.note = e.target.value;\n    setPrescription(tempprescription);\n  }}\n></input>\n</div>\n<div className=\"grid grid-cols-6 mt-3  \">\n<h1 className=\"\">Diagnosis</h1>\n <input\n  placeholder=\"Diagnosis\"\n  required\n  className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n  value={prescription.diagnosis.diagno}\n  onChange={(e) => {\n    let tempprescription = { ...prescription };\n    tempprescription.diagnosis.diagno = e.target.value;\n    setPrescription(tempprescription);\n  }}\n></input>\n</div>\n<div className=\"grid grid-cols-6 mt-3  \">\n<h1 className=\"col-span-1\">Procedure Conducted</h1>\n <input\n  placeholder=\"Procedure\"\n  className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n  value={prescription.procedureConducted.procedure}\n  onChange={(e) => {\n    let tempprescription = { ...prescription };\n    tempprescription.procedureConducted.procedure =\n      e.target.value;\n    setPrescription(tempprescription);\n  }}\n></input>\n</div>\n<h1 className=\"font-bold text-xl mt-4 \">Medicines</h1>\n<div className=\"mt-4\">\n{MedicineList.map((medicine, index) => (\n  <div>\n    <div className=\"grid grid-cols-8\">\n      <div className=\"col-span-3\">\n        <div className=\"grid grid-cols-6 mt-2  \">\n          <h1 className=\"col-span-2\">Medicine Name </h1>\n           <input\n            placeholder=\"Medicine Name\"\n            required\n            className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-4 ml-14\"\n            value={medicine.medicineName}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].medicineName =\n                e.target.value;\n              setMedicineList(tempmedicinelist);\n               let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          ></input>\n        </div>\n        <div className=\"grid grid-cols-6 mt-3  \">\n          <h1 className=\"col-span-2\">Type</h1>\n           <input\n            placeholder=\"Type of Medicine \"\n            className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none ml-14 col-span-4\"\n            value={medicine.type}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].type = e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          ></input>\n        </div>\n        <div className=\"grid grid-cols-6 mt-3  \">\n          <h1 className=\"col-span-2\">Duration (days)</h1>\n           <input\n            required\n            className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-4 ml-14\"\n            value={medicine.duration}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].duration = e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          ></input>\n        </div>\n        <div className=\"grid grid-cols-6 mt-3  \">\n          <h1 className=\"col-span-2\">Total Tablets</h1>\n           <input\n            required\n            className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-4 ml-14\"\n            type=\"number\"\n            value={medicine.total}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].total = e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          ></input>\n        </div>\n      </div>\n      <div className=\"col-span-3 ml-6\">\n        <h1>Dosages</h1>\n        <div className=\"grid grid-cols-6 mt-3  \">\n          <h1 className=\" col-span-2\">Morning</h1>\n           <input\n            placeholder=\"Quantity\"\n            required\n            className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n            value={medicine.dosage.morning.quantity}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].dosage.morning.quantity =\n                e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          ></input>\n          <select\n            className=\"col-span-2\"\n            id=\"morning\"\n            placeholder=\"-\"\n            value={medicine.dosage.morning.remark}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].dosage.morning.remark =\n                e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          >\n            <option>select</option>\n            <option>After Food</option>\n            <option>Before food</option>\n          </select>\n        </div>\n        <div className=\"grid grid-cols-6 mt-2  \">\n          <h1 className=\"col-span-2\">Afternoon</h1>\n           <input\n            placeholder=\"Quantity\"\n            required\n            className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n            value={medicine.dosage.afternoon.quantity}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].dosage.afternoon.quantity =\n                e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          ></input>\n          <select\n            className=\"col-span-2\"\n            id=\"afternoon\"\n            placeholder=\"-\"\n            value={medicine.dosage.afternoon.remark}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].dosage.afternoon.remark =\n                e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          >\n            <option>select</option>\n            <option>After Food</option>\n            <option>Before food</option>\n          </select>\n        </div>\n        <div className=\"grid grid-cols-6 mt-2  \">\n          <h1 className=\"col-span-2\">Night</h1>\n           <input\n            placeholder=\"Quantity \"\n            required\n            className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n            value={medicine.dosage.evening.quantity}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].dosage.evening.quantity =\n                e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          ></input>\n          <select\n            className=\"col-span-2\"\n            id=\"night\"\n            placeholder=\"-\"\n            value={medicine.dosage.evening.remark}\n            onChange={(e) => {\n              let tempmedicinelist = [...MedicineList];\n              tempmedicinelist[index].dosage.evening.remark =\n                e.target.value;\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = MedicineList;\n              setPrescription(tempprescription);\n            }}\n          >\n            <option>select</option>\n            <option>Before Food</option>\n            <option>After food</option>\n          </select>\n        </div>\n      </div>\n      <div className=\"flex\">\n        <div\n          className=\" m-2 h-10 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n          onClick={handleAddMedicine}\n        >\n          <img\n            src={plus_logo}\n            className=\"w-8 h-8\"\n            alt=\"plus-logo\"\n          ></img>\n        </div>\n        {MedicineList.length > 1 && (\n          <div\n            className=\" m-2 h-10 w-20 mt-0   font-poppins font-semibold cursor-pointer \"\n            onClick={() => {\n              let tempmedicinelist = [...MedicineList];\n              setMedicineList(tempmedicinelist);\n              let tempprescription = { ...prescription };\n              tempprescription.medicines = tempmedicinelist;\n              setPrescription(tempprescription);\n              tempmedicinelist.splice(index, 1);\n            }}\n          >\n            <img\n              src={minus_logo}\n              className=\"w-8 h-8\"\n              alt=\"minus-logo\"\n            ></img>\n          </div>\n        )}\n      </div>\n    </div>\n  </div>\n))}\n</div>\n<div>\n{investigations.map((Investigation, index) => (\n  <div className=\"grid grid-cols-6 mt-6\">\n    <h1 className=\"col-span-1\">Investigations </h1>\n     <input\n      placeholder=\"e.g demo \"\n      className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n      value={Investigation.investigation}\n      onChange={(e) => {\n        const tempinvestigations = [...investigations];\n        tempinvestigations[index].investigation = e.target.value;\n        setInvestigations(tempinvestigations);\n        let tempprescription = { ...prescription };\n        tempprescription.investigations = investigations;\n        setPrescription(tempprescription);\n      }}\n    ></input>\n     <div className=\"flex ml-3\">\n      <div\n        className=\" m-2 h-8 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n        onClick={handleAddInvestigation}\n      >\n        <img\n          src={plus_logo}\n          className=\"w-8 h-8\"\n          alt=\"plus-logo\"\n        ></img>\n      </div>\n      {investigations.length > 1 && (\n        <div\n          className=\" m-2 h-8 w-20 mt-0   font-poppins font-semibold cursor-pointer \"\n          onClick={() => {\n            let tempinvestigations = [...investigations];\n            tempinvestigations.splice(index, 1);\n            let tempprescription = { ...prescription };\n            tempprescription.investigations = tempinvestigations;\n            setPrescription(tempprescription);\n            setInvestigations(tempinvestigations);\n          }}\n        >\n          <img\n            src={minus_logo}\n            className=\"w-8 h-8\"\n            alt=\"minus-logo\"\n          ></img>\n        </div>\n      )}\n    </div>\n  </div>\n))}\n {advices.map((Advice, index) => (\n  <div className=\"grid grid-cols-6 mt-2\">\n    <h1 className=\"col-span-1\">Advices </h1>\n     <input\n      placeholder=\"e.g drink more water \"\n      className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n      value={Advice.advice}\n      onChange={(e) => {\n        const tempadvices = [...advices];\n        tempadvices[index].advice = e.target.value;\n        setAdvices(tempadvices);\n         let tempprescription = { ...prescription };\n        tempprescription.advices = advices;\n        setPrescription(tempprescription);\n      }}\n    ></input>\n     <div className=\"flex ml-3\">\n      <div\n        className=\" m-2 h-8 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n        onClick={handleAddAdvices}\n      >\n        <img\n          src={plus_logo}\n          className=\"w-8 h-8\"\n          alt=\"plus-logo\"\n        ></img>\n      </div>\n      {advices.length > 1 && (\n        <div\n          className=\" m-2 h-8 w-20 mt-0   font-poppins font-semibold cursor-pointer \"\n          onClick={() => {\n            const tempadvices = [...advices];\n            tempadvices.splice(index, 1);\n             let tempprescription = { ...prescription };\n            tempprescription.advices = tempadvices;\n            setPrescription(tempprescription);\n            setAdvices(tempadvices);\n          }}\n        >\n          <img\n            src={minus_logo}\n            className=\"w-8 h-8\"\n            alt=\"minus-logo\"\n          ></img>\n        </div>\n      )}\n    </div>\n  </div>\n))}\n</div>\n<div className=\"flex justify-center mt-8\">\n{Loading ? (\n  <ReactLoading\n    type={\"bubbles\"}\n    color={\"\"}\n    height={\"5%\"}\n    width={\"5%\"}\n  />\n) : (\n  <button className=\"bg-primary rounded p-2 px-8 font-bold text-xl hover:bg-bgsecondary mb-4 \">\n    Submit\n  </button>\n)}\n</div>\n</form>\n</div>\n</div>\n<Footer></Footer>\n</div>\n);\n};\nexport default AddNewDiagnosis;*/","map":{"version":3,"names":[],"sources":["/Users/abhinavchallagundla/Downloads/public_health_record_management_system-master/client/src/components/doctorDashboard/AddNewDiagnosis.js"],"sourcesContent":["/*import Footer from \"../landingPage/Footer\";\nimport plus_logo from \"../../assets/img/dashboard/add2_pbl.png\";\nimport minus_logo from \"../../assets/img/dashboard/minus2_pbl.png\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport ReactLoading from \"react-loading\";\n\nconst AddNewDiagnosis = (props) => {\n  const navigate = useNavigate();\n  const [Loading, setLoading] = useState(false);\n  const [doctor, setDoctor] = useState({});\n  const [MedicineList, setMedicineList] = useState([\n    {\n      medicineName: \"\",\n      type: \"\",\n      dosage: {\n        morning: { quantity: \"\", remark: \"\" },\n        afternoon: { quantity: \"\", remark: \"\" },\n        evening: { quantity: \"\", remark: \"\" },\n      },\n      duration: \"\",\n      total: \"\",\n    },\n  ]);\n\n  const [chiefComplaints, setChiefComplaints] = useState([\n    { complaint: \"\", duration: \"\", finding: \"\" },\n  ]);\n  // const [clinicalFindings, setClinicalFindings] = useState([{ finding: \"\" }]);\n  const [investigations, setInvestigations] = useState([{ investigation: \"\" }]);\n  const [advices, setAdvices] = useState([{ advice: \"\" }]);\n\n  const handleAddMedicine = () => {\n    const tempmedicinelist = [...MedicineList];\n    tempmedicinelist.push({\n      medicineName: \"\",\n      type: \"\",\n      dosage: {\n        morning: { quantity: \"\", remark: \"\" },\n        afternoon: { quantity: \"\", remark: \"\" },\n        evening: { quantity: \"\", remark: \"\" },\n      },\n      duration: \"\",\n      total: \"\",\n    });\n    setMedicineList(tempmedicinelist);\n  };\n  const handleAddChiefComplaint = () => {\n    const tempChiefComplaint = [...chiefComplaints];\n    tempChiefComplaint.push({ complaint: \"\", duration: \"\", finding: \"\" });\n    setChiefComplaints(tempChiefComplaint);\n  };\n\n  // const handleAddClinicalFindings = () => {\n  //   const tempClinicalFinding = [...clinicalFindings];\n  //   tempClinicalFinding.push({ finding: \"\" });\n  //   setClinicalFindings(tempClinicalFinding);\n  // };\n\n  const handleAddInvestigation = () => {\n    const tempInvestigations = [...investigations];\n    tempInvestigations.push({ investigation: \"\" });\n    setInvestigations(tempInvestigations);\n  };\n\n  const handleAddAdvices = () => {\n    const tempAdvices = [...advices];\n    tempAdvices.push({ advice: \"\" });\n    setAdvices(tempAdvices);\n  };\n\n  const [prescription, setPrescription] = useState({\n    doctor: \"\",\n    doctormobile: \"\",\n    hospital: {\n      name: \"\",\n      address: \"\",\n      mobile: \"\",\n    },\n    chiefComplaints: chiefComplaints,\n    notes: { note: \"\" },\n    diagnosis: { diagno: \"\" },\n    procedureConducted: { procedure: \"\" },\n    medicines: MedicineList,\n    investigations: investigations,\n    advices: advices,\n  });\n\n  useEffect(() => {\n    async function getDoctor() {\n      const res = await fetch(\"/getdoctor\");\n      const data = await res.json();\n      if (data.AuthError) {\n        props.settoastCondition({\n          status: \"info\",\n          message: \"Please Login to proceed!!!\",\n        });\n        props.setToastShow(true);\n      }\n      setDoctor(data.doctor);\n      const tempprescription = { ...prescription };\n      tempprescription.doctor = `${doctor.name.firstName} ${doctor.name.middleName} ${doctor.name.surName}`;\n      tempprescription.hospital.name = doctor.org;\n      tempprescription.hospital.address = `${doctor.orgAddress.building}, ${doctor.orgAddress.city}, ${doctor.orgAddress.taluka}, ${doctor.orgAddress.district}, ${doctor.orgAddress.state}- ${doctor.orgAddress.pincode}`;\n      tempprescription.doctormobile = doctor.mobile;\n      tempprescription.hospital.mobile = doctor.orgNumber;\n      setPrescription(tempprescription);\n    }\n    getDoctor();\n  }, [doctor]);\n\n  const handleAddPrescription = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    const res = await fetch(`/prescription/${props.healthID}`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(prescription),\n    });\n    const data = await res.json();\n    if (data.AuthError) {\n      props.settoastCondition({\n        status: \"info\",\n        message: \"Please Login to proceed!!!\",\n      });\n      props.setToastShow(true);\n      navigate(\"/\");\n    }\n    if (data.msg) {\n      props.settoastCondition({\n        status: \"error\",\n        message: \"Please fill all fields properly!!!\",\n      });\n      props.setToastShow(true);\n    }\n    setLoading(false);\n    props.settoastCondition({\n      status: \"success\",\n      message: \"Prescription Added Successfully!!!\",\n    });\n    props.setToastShow(true);\n    navigate(\"/doctor/dashboard\");\n  };\n\n  return (\n    <div className=\"font-poppins col-span-10 overflow-y-scroll\">\n      <div className=\" lg:min-h-screen lg:grid grid-cols-6  \">\n        <div className=\" col-start-1 col-span-6 ml-8\">\n          <h1 className=\"font-bold lg:text-2xl my-6 ml-6  \">\n            Add a new diagnosis\n          </h1>\n\n          <form\n            className=\"bg-white shadow p-6 m-2 ml-2 mt-8 lg:font-bold  \"\n            onSubmit={handleAddPrescription}\n          >\n            <div className=\"mt-3\">\n              {chiefComplaints.map((chiefComplaint, index) => (\n                <div className=\"grid grid-cols-6 mt-2\">\n                  <h1 className=\"col-span-1\">Chief Complaints </h1>\n\n                  <input\n                    placeholder=\"complaint \"\n                    value={chiefComplaint.complaint}\n                    onChange={(e) => {\n                      let tempChiefComplaint = [...chiefComplaints];\n                      tempChiefComplaint[index].complaint = e.target.value;\n                      setChiefComplaints(tempChiefComplaint);\n                      let tempprescription = { ...prescription };\n                      tempprescription.chiefComplaints = chiefComplaints;\n                      setPrescription(tempprescription);\n                    }}\n                    className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-1\"\n                  ></input>\n                  <input\n                    placeholder=\" duration \"\n                    className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-1\"\n                    value={chiefComplaint.duration}\n                    onChange={(e) => {\n                      let tempChiefComplaint = [...chiefComplaints];\n                      tempChiefComplaint[index].duration = e.target.value;\n                      setChiefComplaints(tempChiefComplaint);\n\n                      let tempprescription = { ...prescription };\n                      tempprescription.chiefComplaints = chiefComplaints;\n                      setPrescription(tempprescription);\n                    }}\n                  ></input>\n                  <input\n                    placeholder=\"Clinical Finding\"\n                    className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-1\"\n                    value={chiefComplaints.finding}\n                    onChange={(e) => {\n                      let tempChiefComplaint = [...chiefComplaints];\n                      tempChiefComplaint[index].finding = e.target.value;\n                      setChiefComplaints(tempChiefComplaint);\n\n                      let tempprescription = { ...prescription };\n                      tempprescription.chiefComplaints = chiefComplaints;\n                      setPrescription(tempprescription);\n                    }}\n                  ></input>\n                  <div className=\"flex ml-3\">\n                    <div\n                      className=\" m-2 h-8 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n                      onClick={handleAddChiefComplaint}\n                    >\n                      <img\n                        src={plus_logo}\n                        className=\"w-8 h-8\"\n                        alt=\"plus-logo\"\n                      ></img>\n                    </div>\n                    {chiefComplaints.length > 1 && (\n                      <div\n                        className=\" m-2 h-8 w-20 mt-0 font-poppins font-semibold cursor-pointer \"\n                        onClick={() => {\n                          let tempChiefComplaint = [...chiefComplaints];\n                          tempChiefComplaint.splice(index, 1);\n\n                          let tempprescription = { ...prescription };\n                          tempprescription.chiefComplaints = tempChiefComplaint;\n                          setPrescription(tempprescription);\n                          setChiefComplaints(tempChiefComplaint);\n                        }}\n                      >\n                        <img\n                          src={minus_logo}\n                          className=\"w-8 h-8\"\n                          alt=\"minus-logo\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div className=\"grid grid-cols-6 mt-3  \">\n              <h1 className=\"\">Notes </h1>*/\n\n  /*these lines are to be commented only dont uncomment them            {/* <input\n                placeholder=\" Note \"\n                className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                value={prescription.notes}\n                onChange={(e) => {\n                  let tempprescription = { ...prescription };\n                  tempprescription.notes = e.target.value;\n                  setPrescription(tempprescription);\n                }}\n              // ></input> */\n\n\n              /*<input\n                placeholder=\" Note \"\n                className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                // value={prescription.notes}\n                value={prescription.notes.note}\n                onChange={(e) => {\n                  let tempprescription = { ...prescription };\n                  tempprescription.notes.note = e.target.value;\n                  setPrescription(tempprescription);\n                }}\n              ></input>\n            </div>\n            <div className=\"grid grid-cols-6 mt-3  \">\n              <h1 className=\"\">Diagnosis</h1>\n\n              <input\n                placeholder=\"Diagnosis\"\n                required\n                className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                value={prescription.diagnosis.diagno}\n                onChange={(e) => {\n                  let tempprescription = { ...prescription };\n                  tempprescription.diagnosis.diagno = e.target.value;\n                  setPrescription(tempprescription);\n                }}\n              ></input>\n            </div>\n            <div className=\"grid grid-cols-6 mt-3  \">\n              <h1 className=\"col-span-1\">Procedure Conducted</h1>\n\n              <input\n                placeholder=\"Procedure\"\n                className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                value={prescription.procedureConducted.procedure}\n                onChange={(e) => {\n                  let tempprescription = { ...prescription };\n                  tempprescription.procedureConducted.procedure =\n                    e.target.value;\n                  setPrescription(tempprescription);\n                }}\n              ></input>\n            </div>\n            <h1 className=\"font-bold text-xl mt-4 \">Medicines</h1>\n\n            <div className=\"mt-4\">\n              {MedicineList.map((medicine, index) => (\n                <div>\n                  <div className=\"grid grid-cols-8\">\n                    <div className=\"col-span-3\">\n                      <div className=\"grid grid-cols-6 mt-2  \">\n                        <h1 className=\"col-span-2\">Medicine Name </h1>\n\n                        <input\n                          placeholder=\"Medicine Name\"\n                          required\n                          className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-4 ml-14\"\n                          value={medicine.medicineName}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].medicineName =\n                              e.target.value;\n                            setMedicineList(tempmedicinelist);\n\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        ></input>\n                      </div>\n                      <div className=\"grid grid-cols-6 mt-3  \">\n                        <h1 className=\"col-span-2\">Type</h1>\n\n                        <input\n                          placeholder=\"Type of Medicine \"\n                          className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none ml-14 col-span-4\"\n                          value={medicine.type}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].type = e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        ></input>\n                      </div>\n                      <div className=\"grid grid-cols-6 mt-3  \">\n                        <h1 className=\"col-span-2\">Duration (days)</h1>\n\n                        <input\n                          required\n                          className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-4 ml-14\"\n                          value={medicine.duration}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].duration = e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        ></input>\n                      </div>\n                      <div className=\"grid grid-cols-6 mt-3  \">\n                        <h1 className=\"col-span-2\">Total Tablets</h1>\n\n                        <input\n                          required\n                          className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-4 ml-14\"\n                          type=\"number\"\n                          value={medicine.total}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].total = e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        ></input>\n                      </div>\n                    </div>\n                    <div className=\"col-span-3 ml-6\">\n                      <h1>Dosages</h1>\n                      <div className=\"grid grid-cols-6 mt-3  \">\n                        <h1 className=\" col-span-2\">Morning</h1>\n\n                        <input\n                          placeholder=\"Quantity\"\n                          required\n                          className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                          value={medicine.dosage.morning.quantity}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].dosage.morning.quantity =\n                              e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        ></input>\n                        <select\n                          className=\"col-span-2\"\n                          id=\"morning\"\n                          placeholder=\"-\"\n                          value={medicine.dosage.morning.remark}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].dosage.morning.remark =\n                              e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        >\n                          <option>select</option>\n                          <option>After Food</option>\n                          <option>Before food</option>\n                        </select>\n                      </div>\n                      <div className=\"grid grid-cols-6 mt-2  \">\n                        <h1 className=\"col-span-2\">Afternoon</h1>\n\n                        <input\n                          placeholder=\"Quantity\"\n                          required\n                          className=\" bg-blue-100 rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                          value={medicine.dosage.afternoon.quantity}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].dosage.afternoon.quantity =\n                              e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        ></input>\n                        <select\n                          className=\"col-span-2\"\n                          id=\"afternoon\"\n                          placeholder=\"-\"\n                          value={medicine.dosage.afternoon.remark}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].dosage.afternoon.remark =\n                              e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        >\n                          <option>select</option>\n                          <option>After Food</option>\n                          <option>Before food</option>\n                        </select>\n                      </div>\n                      <div className=\"grid grid-cols-6 mt-2  \">\n                        <h1 className=\"col-span-2\">Night</h1>\n\n                        <input\n                          placeholder=\"Quantity \"\n                          required\n                          className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                          value={medicine.dosage.evening.quantity}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].dosage.evening.quantity =\n                              e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        ></input>\n                        <select\n                          className=\"col-span-2\"\n                          id=\"night\"\n                          placeholder=\"-\"\n                          value={medicine.dosage.evening.remark}\n                          onChange={(e) => {\n                            let tempmedicinelist = [...MedicineList];\n                            tempmedicinelist[index].dosage.evening.remark =\n                              e.target.value;\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = MedicineList;\n                            setPrescription(tempprescription);\n                          }}\n                        >\n                          <option>select</option>\n                          <option>Before Food</option>\n                          <option>After food</option>\n                        </select>\n                      </div>\n                    </div>\n                    <div className=\"flex\">\n                      <div\n                        className=\" m-2 h-10 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n                        onClick={handleAddMedicine}\n                      >\n                        <img\n                          src={plus_logo}\n                          className=\"w-8 h-8\"\n                          alt=\"plus-logo\"\n                        ></img>\n                      </div>\n                      {MedicineList.length > 1 && (\n                        <div\n                          className=\" m-2 h-10 w-20 mt-0   font-poppins font-semibold cursor-pointer \"\n                          onClick={() => {\n                            let tempmedicinelist = [...MedicineList];\n                            setMedicineList(tempmedicinelist);\n                            let tempprescription = { ...prescription };\n                            tempprescription.medicines = tempmedicinelist;\n                            setPrescription(tempprescription);\n                            tempmedicinelist.splice(index, 1);\n                          }}\n                        >\n                          <img\n                            src={minus_logo}\n                            className=\"w-8 h-8\"\n                            alt=\"minus-logo\"\n                          ></img>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n            <div>\n              {investigations.map((Investigation, index) => (\n                <div className=\"grid grid-cols-6 mt-6\">\n                  <h1 className=\"col-span-1\">Investigations </h1>\n\n                  <input\n                    placeholder=\"e.g demo \"\n                    className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                    value={Investigation.investigation}\n                    onChange={(e) => {\n                      const tempinvestigations = [...investigations];\n                      tempinvestigations[index].investigation = e.target.value;\n                      setInvestigations(tempinvestigations);\n                      let tempprescription = { ...prescription };\n                      tempprescription.investigations = investigations;\n                      setPrescription(tempprescription);\n                    }}\n                  ></input>\n\n                  <div className=\"flex ml-3\">\n                    <div\n                      className=\" m-2 h-8 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n                      onClick={handleAddInvestigation}\n                    >\n                      <img\n                        src={plus_logo}\n                        className=\"w-8 h-8\"\n                        alt=\"plus-logo\"\n                      ></img>\n                    </div>\n                    {investigations.length > 1 && (\n                      <div\n                        className=\" m-2 h-8 w-20 mt-0   font-poppins font-semibold cursor-pointer \"\n                        onClick={() => {\n                          let tempinvestigations = [...investigations];\n                          tempinvestigations.splice(index, 1);\n                          let tempprescription = { ...prescription };\n                          tempprescription.investigations = tempinvestigations;\n                          setPrescription(tempprescription);\n                          setInvestigations(tempinvestigations);\n                        }}\n                      >\n                        <img\n                          src={minus_logo}\n                          className=\"w-8 h-8\"\n                          alt=\"minus-logo\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n\n              {advices.map((Advice, index) => (\n                <div className=\"grid grid-cols-6 mt-2\">\n                  <h1 className=\"col-span-1\">Advices </h1>\n\n                  <input\n                    placeholder=\"e.g drink more water \"\n                    className=\" bg-blue-100  rounded mx-2 px-2 py-1.5 outline-none col-span-2\"\n                    value={Advice.advice}\n                    onChange={(e) => {\n                      const tempadvices = [...advices];\n                      tempadvices[index].advice = e.target.value;\n                      setAdvices(tempadvices);\n\n                      let tempprescription = { ...prescription };\n                      tempprescription.advices = advices;\n                      setPrescription(tempprescription);\n                    }}\n                  ></input>\n\n                  <div className=\"flex ml-3\">\n                    <div\n                      className=\" m-2 h-8 w-16 mt-0  font-poppins font-semibold cursor-pointer \"\n                      onClick={handleAddAdvices}\n                    >\n                      <img\n                        src={plus_logo}\n                        className=\"w-8 h-8\"\n                        alt=\"plus-logo\"\n                      ></img>\n                    </div>\n                    {advices.length > 1 && (\n                      <div\n                        className=\" m-2 h-8 w-20 mt-0   font-poppins font-semibold cursor-pointer \"\n                        onClick={() => {\n                          const tempadvices = [...advices];\n                          tempadvices.splice(index, 1);\n\n                          let tempprescription = { ...prescription };\n                          tempprescription.advices = tempadvices;\n                          setPrescription(tempprescription);\n                          setAdvices(tempadvices);\n                        }}\n                      >\n                        <img\n                          src={minus_logo}\n                          className=\"w-8 h-8\"\n                          alt=\"minus-logo\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </div>\n\n            <div className=\"flex justify-center mt-8\">\n              {Loading ? (\n                <ReactLoading\n                  type={\"bubbles\"}\n                  color={\"\"}\n                  height={\"5%\"}\n                  width={\"5%\"}\n                />\n              ) : (\n                <button className=\"bg-primary rounded p-2 px-8 font-bold text-xl hover:bg-bgsecondary mb-4 \">\n                  Submit\n                </button>\n              )}\n            </div>\n          </form>\n        </div>\n      </div>\n      <Footer></Footer>\n    </div>\n  );\n};\n\nexport default AddNewDiagnosis;*/\n"],"mappingsc;AACd},"metadata":{},"sourceType":"module"}